[["population-structure-via-construct.html", "13 Population Structure via conStruct 13.1 Download the data 13.2 install conStruct in R 13.3 read in the data 13.4 Get our meta data read into R and ready to use 13.5 Run a structure analysis 13.6 Comparisons across different values of K 13.7 Exercises", " 13 Population Structure via conStruct For this week we will be exploring another way to document population genetic structure (the first way we covered was PCA in Week 8) via a Structure plot implemented in the R package conStruct. conStruct itself has a nice series of tutorials with example data that you can find here Well be using data from the Xuereb et al. paper on P. californicus. This data consists of a vcf file that is in structure format and contains SNP data (3699 SNPs) from 717 individuals (this is the same data we used for our PCA plot in week 9 for pcadapt, and for week 11 for GEA). The lecture for this week can be found here and describes the basics of a structure plot. 13.1 Download the data Well be using data from the Xuereb et al. paper on P. californicus. This data consists of a vcf file that is in structure format and contains SNP data (3699 SNPs) from 100 individuals (this is the same data we used for our PCA plot in week 9 for pcadapt, and for week 11 for GEA, just with fewer individuals for this week). Well download a metafile as well that has sample coordinates and names wget https://raw.githubusercontent.com/BayLab/MarineGenomicsData/main/week12_semester.tar.gz tar -xzvf week12_semester.tar.gz 13.2 install conStruct in R 13.3 read in the data This first step reads in our file which is in structure format and converts it to conStruct format (there are lots of file formats in population genetics, isnt it fun?) We need to make sure that we have the file coding right and this can be confirmed by looking at the structure file in bash to make sure that our samples start at the 3rd row and 3rd column and that our missing data is encoded as a -9. You can do the above by using wc -l to find the number of lines in the structure file. conStruct.data &lt;- structure2conStruct(infile=&quot;filtered_3699snps_100indcalifornicus.recode.strct_in&quot;, onerowperind = TRUE, start.loci = 3, start.samples = 3, missing.datum = -9, outfile = &quot;Construct_100inds&quot;) 13.4 Get our meta data read into R and ready to use This file contains the lat and lon of our samples as well as the site name and individual id. For conStruct we can make an object that contains the lat and lon and has the site name as the row names. #read in the data meta&lt;-read.table(&quot;californicus_metadata.csv&quot;, header=T, sep=&quot;,&quot;) #pull out the lat and lon and put it in a new matrix object sites&lt;-as.matrix(meta[-c(51:667), c(&quot;LAT&quot;, &quot;LONG&quot;)]) #assign row names that are the site id for each sample rownames(sites)&lt;-meta$SITE[-c(51:667)] 13.5 Run a structure analysis We now have our data read into conStruct and converted to conStruct format and our site information from the metadata in a matrix format. We can now run a structure analyses. For these analyses we chose a value of K (the number of clusters) and typically run the analyses for a range of K (2:7 for example). Well run K = 2 through K = 4 and then well do some model comparison to discuss whether one of these is better than the other. And well only run it with 1 chains and 10 iterations. This is simply so that the program runs quickly within our class time. For a real analysis youd want to run more than one chain (2-5) and iterations up to 1000. Its important to compare the different chains to ensure the analyses converges, as described here my.run &lt;- conStruct(spatial = FALSE, K = 1, freqs = conStruct.data, geoDist = NULL, coords = sites, prefix = &quot;Sea_cucu_K1&quot;, n.chains = 1, n.iter = 10, make.figs=F) my.run &lt;- conStruct(spatial = FALSE, K = 2, freqs = conStruct.data, geoDist = NULL, coords = sites, prefix = &quot;Sea_cucu_K2&quot;, n.chains = 1, n.iter = 10, make.figs=F) my.run &lt;- conStruct(spatial = FALSE, K = 3, freqs = conStruct.data, geoDist = NULL, coords = sites, prefix = &quot;Sea_cucu_K3&quot;, n.chains = 1, n.iter = 10, make.figs=F) my.run &lt;- conStruct(spatial = FALSE, K = 4, freqs = conStruct.data, geoDist = NULL, coords = sites, prefix = &quot;Sea_cucu_K4&quot;, n.chains = 1, n.iter = 10, make.figs=F) my.run &lt;- conStruct(spatial = FALSE, K = 5, freqs = conStruct.data, geoDist = NULL, coords = sites, prefix = &quot;Sea_cucu_K5&quot;, n.chains = 1, n.iter = 10, make.figs=F) This step produces several output files (a conStruct.results file and a data.block file) called after whatever you put in the prefix = section (sea_cucu_k2 in our case). We need to load that output file back into R to access all the things it produced. Lets just look at the first one for k = 2. #load the construct results file load(&quot;Sea_cucu_K2_conStruct.results.Robj&quot;) admix.props&lt;- conStruct.results$chain_1$MAP$admix.proportions #load the data block file load(&quot;Sea_cucu_K2_data.block.Robj&quot;) # make a structure plot make.structure.plot(admix.proportions = admix.props, mar = c(4,4,2,2)) 13.6 Comparisons across different values of K You may want to show a single structure plot for one value of K and may want that one plot to be the best fitting model for your data. There are a few ways to do this, however often theres not a single best model and care should be taken as models with more parameters often appear to be a better fit, but are not necessarily more biologically meaningful. Well be looking at how different levels of K contribute to describing patterns of variation in our data. Code taken and modified from the vignette here The idea here is that if we can visualize how much different levels of K contribute to describing our data we can tell whether were getting more information from a K = 5 compared to a K = 2 run. layer.contributions &lt;- matrix(NA,nrow=5,ncol=5) # load the conStruct.results.Robj and data.block.Robj # files saved at the end of a conStruct run load(&quot;Sea_cucu_K1_conStruct.results.Robj&quot;) load(&quot;Sea_cucu_K1_data.block.Robj&quot;) # calculate layer contributions layer.contributions[,1] &lt;- c(calculate.layer.contribution(conStruct.results[[1]],data.block), rep(0,4)) tmp &lt;- conStruct.results[[1]]$MAP$admix.proportions for(i in 2:5){ # load the conStruct.results.Robj and data.block.Robj # files saved at the end of a conStruct run load(sprintf(&quot;Sea_cucu_K%s_conStruct.results.Robj&quot;,i)) load(sprintf(&quot;Sea_cucu_K%s_data.block.Robj&quot;,i)) # match layers up across runs to keep plotting colors consistent # for the same layers in different runs tmp.order &lt;- match.layers.x.runs(tmp,conStruct.results[[1]]$MAP$admix.proportions) # calculate layer contributions layer.contributions[,i] &lt;- c(calculate.layer.contribution(conStruct.results=conStruct.results[[1]], data.block=data.block, layer.order=tmp.order), rep(0,5-i)) tmp &lt;- conStruct.results[[1]]$MAP$admix.proportions[,tmp.order] } Well then plot these results as a barplot barplot(layer.contributions, col=c(&quot;blue&quot;, &quot;red&quot;, &quot;goldenrod1&quot;, &quot;forestgreen&quot;, &quot;darkorchid1&quot;), xlab=&quot;&quot;, ylab=&quot;layer contributions&quot;, names.arg=paste0(&quot;K=&quot;,1:5)) 13.7 Exercises change the colors in the plot order the plot by latitude "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
